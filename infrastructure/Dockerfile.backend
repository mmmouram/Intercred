# ===================================================================
# Intercred Modernization - Backend Dockerfile
# Java 21 + Spring Boot + Maven
# ===================================================================
# Build context: project root (../)
# This Dockerfile builds and runs the backend from /backend
# - Uses multi-stage for smaller images
# - Exposes port 8080 (default Spring Boot)
# - Uses Maven to build, then runs the fat JAR
# - For dev/test/prod, see application.yml and env/.env.example
# ===================================================================

# ----------- Build Stage -----------
FROM maven:3.9.7-eclipse-temurin-21 AS build

WORKDIR /build

# Copy only pom.xml and download dependencies first (for better cache)
COPY backend/pom.xml backend/
RUN mvn -f backend/pom.xml dependency:go-offline

# Copy the rest of the source code
COPY backend/ backend/
# (If you want to include shared files, adjust COPY as needed)

# Build the application (fat JAR)
RUN mvn -f backend/pom.xml clean package -DskipTests=false

# ----------- Runtime Stage -----------
FROM eclipse-temurin:21-jre-jammy

ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
ENV SPRING_PROFILES_ACTIVE=prod

WORKDIR /app

# Copy the built JAR from the build stage
COPY --from=build /build/backend/target/*.jar app.jar

# Expose the default Spring Boot port
EXPOSE 8080

# Healthcheck (optional, for Docker Compose)
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# Run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]

# ===================================================================
# Build:
#   docker build -f infrastructure/Dockerfile.backend -t intercred-backend .
# Run:
#   docker run -p 8080:8080 --env-file env/.env intercred-backend
# For compose: see infrastructure/docker-compose.yml
# ===================================================================
# See infrastructure/README.md for more details.
# ===================================================================