# frontend/.env.example

# === Intercred Modernization - Frontend Environment Example ===
# Copy this file to .env and fill in the values for your local/dev environment.

# --- API Base URL ---
# URL of the backend API (Spring Boot)
VITE_API_BASE_URL=http://localhost:8080

# --- Auth ---
# Auth type: jwt, oauth2, keycloak
VITE_AUTH_TYPE=jwt

# --- Feature Flags ---
# Enable/disable i18n (optional)
VITE_I18N_ENABLED=false

# --- App Info ---
VITE_APP_NAME=Intercred Modernization
VITE_APP_ENV=development

# --- CORS ---
# Used for local development, must match backend CORS_ALLOWED_ORIGINS
VITE_CORS_ALLOWED_ORIGINS=http://localhost:5173

# --- Other ---
# Add any other environment variables as needed

# === Stack & Organization Reference ===
# - React + TypeScript (Vite)
# - React Router, Axios/Fetch, React Hook Form + Zod, ESLint/Prettier
# - src/pages/ (fluxos), src/components/ (UI), src/services/ (HTTP), src/contexts/ (auth/theme), src/hooks/ (reusable logic), src/utils/ (helpers)
# - Estado controlado, validação e máscaras (React Hook Form + Zod)
# - Testes: Vitest + React Testing Library (smoke e formulários críticos)
# - Integração: .env (URL da API), i18n opcional

# === CI/CD & Infra Reference ===
# - GitHub Actions: /.github/workflows/ci.yml, /frontend/.github/workflows/ci.yml
# - infrastructure/: Dockerfiles, docker-compose, README.md
# - env/: .env.example para backend e frontend
# - _temp/logs/: somente para logs locais de DEV

# === Migration Info (preencher) ===
# Repositório Delphi / pasta raiz: [link ou path]
# Banco de dados: [PostgreSQL/SQL Server/etc.] + credenciais de DEV
# Autenticação: [JWT/OAuth2/Keycloak/etc.]
# Domínios prioritários: [ex.: crédito, clientes, contratos]
# Requisitos não-funcionais: [latência, throughput, SLO, LGPD]

# === Entregáveis obrigatórios ===
# - Código fonte completo no layout acima
# - OpenAPI (swagger.yaml/json) em resources/
# - Matriz de equivalência (CSV/MD) mapeando Form/Action/Relatório Delphi → page/component React, service, endpoint
# - Coleção Postman/Insomnia para os principais endpoints
# - README de migração explicando decisões, gaps, diferenças comportamentais e TODOs
# - Scripts de build: npm/yarn build (frontend)
# - Pipelines em /.github/workflows/*.yml para backend e frontend

# === Critérios de aceitação ===
# - Build frontend sem erros
# - Endpoints e fluxos UI equivalentes ao Delphi (documente diferenças justificadas)
# - Cobertura de testes ≥ [X%] nos módulos críticos
# - Linters/formatadores aprovam o código